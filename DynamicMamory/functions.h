#pragma once
template<typename T> void Print(const T* arr,const int& n);
/*template<typename T>*/ void Print(int** arr, const int rows, const int cols);
/*template<typename T>*/ void FillRand(int** arr, const int rows, const int cols);
int* push_front(int* arr, int& n, int a);
int** push_row_front(int** arr, int& rows, const int& cols);
int** push_col_front(int** arr, const int& rows, int& cols);
int* push_back(int* arr, int& n);
template<typename T > T** push_row_back(T** arr, int& rows, const int& cols);
int** push_col_back(int** arr, const int& rows, int& cols);
int* insert(int* arr, int& n,const int& index);
int** insert_row(int** arr, int& rows, const int& cols,int index_rows);
int** insert_col(int** arr, const int& rows, int& cols, int index_cols);
int* pop_back(int* arr, int& n);
int** pop_row_back(int** arr, int& rows, const int& cols);
int** pop_col_back(int** arr, const int& rows, int& cols);
int* pop_front(int* arr, int& n);
int** pop_row_front(int** arr, int& rows, const int& cols);
int** pop_col_front(int** arr, const int& rows, int& cols);
int* erase(int* arr, int& n, const int& index);
int** erase_row(int** arr, int& rows, const int& cols, int index_rows);
int** erase_col(int** arr,  int& rows, int& cols,int index_col);
void Allocate(int** arr, const int& rows, const int& cols);
void Clear(int** arr,const int& rows, int& cols);
